library(tidyr)
if(!require(data.table)) install.packages("data.table")
library(data.table)
# 1. Merge the training and the test sets to create one data set
# 1.1 Set training and test directory
UCI_dir <- "./UCI HAR Dataset"
test_dir <- "./test"
train_dir <- "./train"
# 1.2 Load files in root folder
setwd(UCI_dir)
features <- read.table("features.txt")
activity_labels <- read.table("activity_labels.txt")
names(activity_labels) <- c("activity_number", "activity_name")
# 1.3 Load files in test folder
setwd(test_dir)
X_test <- fread("X_test.txt")
Y_test <- fread("Y_test.txt")
subject_test <- fread("subject_test.txt")
names(Y_test) <- "activity_number"
names(subject_test) <- "subject_number"
# 1.4 Combine test files
data_test <- cbind(subject_test, Y_test, X_test)
# 1.5 Add a "test" label and remove other variables
data_test <- cbind(data_test[, 1:2], type = "test", data_test[, 3:ncol(data_test)])
rm(X_test, Y_test, subject_test)
# 1.6 Load files in train folder
setwd("..")
setwd(train_dir)
X_train <- fread("X_train.txt")
Y_train <- fread("Y_train.txt")
subject_train <- fread("subject_train.txt")
names(Y_train) <- "activity_number"
names(subject_train) <- "subject_number"
# 1.7 Combine train files
data_train <- cbind(subject_train, Y_train, X_train)  # Add id for rows and bind subject number and Y_train
# 1.8 Add a "train" label and remove other variables
data_train <- cbind(data_train[, 1:2], type = "train", data_train[, 3:ncol(data_train)] )
rm(X_train, Y_train, subject_train)
# 1.9 Merge files
data_full <- rbind(data_test, data_train)
rm(data_test, data_train)
# 2. Extract only the measurements on the mean and standard deviation for each measurement
mean_cols <- grep("*mean*", features[,2]) + 2  # Find all column names that contain the word "mean"
std_cols <- grep("*std*", features[,2]) + 2  # Find all column names that contain the word "std"
rel_cols <- sort(c(mean_cols, std_cols))  # Merge and sort the vectors (to preserve column order)
data_relevant <- select(data_full,c(1:3, rel_cols))
rm(mean_cols, std_cols)
rm(list=ls())
# Set working directory
setwd("/Users/Gwen/Dropbox/Data Science/3. Getting and Cleaning Data/Week 4")
# Load relevant packages
if(!require(dplyr)) install.packages("dplyr")
library(dplyr)
if(!require(tidyr)) install.packages("tidyr")
library(tidyr)
if(!require(data.table)) install.packages("data.table")
library(data.table)
# 1. Merge the training and the test sets to create one data set
# 1.1 Set training and test directory
UCI_dir <- "./UCI HAR Dataset"
test_dir <- "./test"
train_dir <- "./train"
# 1.2 Load files in root folder
setwd(UCI_dir)
features <- read.table("features.txt")
activity_labels <- read.table("activity_labels.txt")
names(activity_labels) <- c("activity_number", "activity_name")
# 1.3 Load files in test folder
setwd(test_dir)
X_test <- fread("X_test.txt")
Y_test <- fread("Y_test.txt")
subject_test <- fread("subject_test.txt")
names(Y_test) <- "activity_number"
names(subject_test) <- "subject_number"
# 1.4 Combine test files
data_test <- cbind(subject_test, Y_test, X_test)
# 1.5 Add a "test" label and remove other variables
data_test <- cbind(data_test[, 1:2], type = "test", data_test[, 3:ncol(data_test)])
rm(X_test, Y_test, subject_test)
# 1.6 Load files in train folder
setwd("..")
setwd(train_dir)
X_train <- fread("X_train.txt")
Y_train <- fread("Y_train.txt")
subject_train <- fread("subject_train.txt")
names(Y_train) <- "activity_number"
names(subject_train) <- "subject_number"
# 1.7 Combine train files
data_train <- cbind(subject_train, Y_train, X_train)  # Add id for rows and bind subject number and Y_train
# 1.8 Add a "train" label and remove other variables
data_train <- cbind(data_train[, 1:2], type = "train", data_train[, 3:ncol(data_train)] )
rm(X_train, Y_train, subject_train)
# 1.9 Merge files
data_full <- rbind(data_test, data_train)
rm(data_test, data_train)
# 2. Extract only the measurements on the mean and standard deviation for each measurement
mean_cols <- grep("*mean*", features[,2]) + 3  # Find all column names that contain the word "mean"
std_cols <- grep("*std*", features[,2]) + 3  # Find all column names that contain the word "std"
rel_cols <- sort(c(mean_cols, std_cols))  # Merge and sort the vectors (to preserve column order)
data_relevant <- select(data_full,c(1:3, rel_cols))
data_activity <- merge(data_relevant, activity_labels) %>% # Merge with activity_labels to replace numbers with text
select(-activity_number) # Remove activity_number as no longer needed
data_activity <- select(data_activity, c(1:2, activity_name, 3:ncol(data_activity)-1)) # Bring activity name to 4th column for readability
rm(list=ls())
# Set working directory
setwd("/Users/Gwen/Dropbox/Data Science/3. Getting and Cleaning Data/Week 4")
# Load relevant packages
if(!require(dplyr)) install.packages("dplyr")
library(dplyr)
if(!require(tidyr)) install.packages("tidyr")
library(tidyr)
if(!require(data.table)) install.packages("data.table")
library(data.table)
# 1. Merge the training and the test sets to create one data set
# 1.1 Set training and test directory
UCI_dir <- "./UCI HAR Dataset"
test_dir <- "./test"
train_dir <- "./train"
# 1.2 Load files in root folder
setwd(UCI_dir)
features <- read.table("features.txt")
activity_labels <- read.table("activity_labels.txt")
names(activity_labels) <- c("activity_number", "activity_name")
# 1.3 Load files in test folder
setwd(test_dir)
X_test <- fread("X_test.txt")
Y_test <- fread("Y_test.txt")
subject_test <- fread("subject_test.txt")
names(Y_test) <- "activity_number"
names(subject_test) <- "subject_number"
# 1.4 Combine test files
data_test <- cbind(subject_test, Y_test, X_test)
# 1.5 Add a "test" label and remove other variables
data_test <- cbind(data_test[, 1:2], type = "test", data_test[, 3:ncol(data_test)])
rm(X_test, Y_test, subject_test)
# 1.6 Load files in train folder
setwd("..")
setwd(train_dir)
X_train <- fread("X_train.txt")
Y_train <- fread("Y_train.txt")
subject_train <- fread("subject_train.txt")
names(Y_train) <- "activity_number"
names(subject_train) <- "subject_number"
# 1.7 Combine train files
data_train <- cbind(subject_train, Y_train, X_train)  # Add id for rows and bind subject number and Y_train
# 1.8 Add a "train" label and remove other variables
data_train <- cbind(data_train[, 1:2], type = "train", data_train[, 3:ncol(data_train)] )
rm(X_train, Y_train, subject_train)
# 1.9 Merge files
data_full <- rbind(data_test, data_train)
rm(data_test, data_train)
# 2. Extract only the measurements on the mean and standard deviation for each measurement
mean_cols <- grep("*mean*", features[,2]) + 3  # Find all column names that contain the word "mean"
std_cols <- grep("*std*", features[,2]) + 3  # Find all column names that contain the word "std"
rel_cols <- sort(c(mean_cols, std_cols))  # Merge and sort the vectors (to preserve column order)
data_relevant <- select(data_full,c(1:3, rel_cols))
rm(data_full, mean_cols, std_cols)
# 3. Use descriptive activity names to name the activities in the data set
data_activity <- merge(data_relevant, activity_labels) %>% # Merge with activity_labels to replace numbers with text
select(-activity_number) # Remove activity_number as no longer needed
data_activity <- select(data_activity, c(1:2, activity_name, 3:ncol(data_activity)-1)) # Bring activity name to 4th column for readability
rm(data_relevant)
rm(list=ls())
# Set working directory
setwd("/Users/Gwen/Dropbox/Data Science/3. Getting and Cleaning Data/Week 4")
# Load relevant packages
if(!require(dplyr)) install.packages("dplyr")
library(dplyr)
if(!require(tidyr)) install.packages("tidyr")
library(tidyr)
if(!require(data.table)) install.packages("data.table")
library(data.table)
# 1. Merge the training and the test sets to create one data set
# 1.1 Set training and test directory
UCI_dir <- "./UCI HAR Dataset"
test_dir <- "./test"
train_dir <- "./train"
# 1.2 Load files in root folder
setwd(UCI_dir)
features <- read.table("features.txt")
activity_labels <- read.table("activity_labels.txt")
names(activity_labels) <- c("activity_number", "activity_name")
# 1.3 Load files in test folder
setwd(test_dir)
X_test <- fread("X_test.txt")
Y_test <- fread("Y_test.txt")
subject_test <- fread("subject_test.txt")
names(Y_test) <- "activity_number"
names(subject_test) <- "subject_number"
# 1.4 Combine test files
data_test <- cbind(subject_test, Y_test, X_test)
# 1.5 Add a "test" label and remove other variables
data_test <- cbind(data_test[, 1:2], type = "test", data_test[, 3:ncol(data_test)])
rm(X_test, Y_test, subject_test)
# 1.6 Load files in train folder
setwd("..")
setwd(train_dir)
X_train <- fread("X_train.txt")
Y_train <- fread("Y_train.txt")
subject_train <- fread("subject_train.txt")
names(Y_train) <- "activity_number"
names(subject_train) <- "subject_number"
# 1.7 Combine train files
data_train <- cbind(subject_train, Y_train, X_train)  # Add id for rows and bind subject number and Y_train
# 1.8 Add a "train" label and remove other variables
data_train <- cbind(data_train[, 1:2], type = "train", data_train[, 3:ncol(data_train)] )
rm(X_train, Y_train, subject_train)
# 1.9 Merge files
data_full <- rbind(data_test, data_train)
rm(data_test, data_train)
# 2. Extract only the measurements on the mean and standard deviation for each measurement
mean_cols <- grep("*mean*", features[,2]) + 3  # Find all column names that contain the word "mean"
std_cols <- grep("*std*", features[,2]) + 3  # Find all column names that contain the word "std"
rel_cols <- sort(c(mean_cols, std_cols))  # Merge and sort the vectors (to preserve column order)
data_relevant <- select(data_full,c(1:3, rel_cols))
rm(data_full, mean_cols, std_cols)
# 3. Use descriptive activity names to name the activities in the data set
data_activity <- merge(data_relevant, activity_labels) %>% # Merge with activity_labels to replace numbers with text
select(-activity_number) # Remove activity_number as no longer needed
data_activity <- select(data_activity, c(1:2, activity_name, 3:ncol(data_activity)-1)) # Bring activity name to 4th column for readability
rm(data_relevant, activity_labels)
names_relevant <- names(data_relevant[,1:3]) # Keep names of first 3 columns
rm(list=ls())
# Set working directory
setwd("/Users/Gwen/Dropbox/Data Science/3. Getting and Cleaning Data/Week 4")
# Load relevant packages
if(!require(dplyr)) install.packages("dplyr")
library(dplyr)
if(!require(tidyr)) install.packages("tidyr")
library(tidyr)
if(!require(data.table)) install.packages("data.table")
library(data.table)
# 1. Merge the training and the test sets to create one data set
# 1.1 Set training and test directory
UCI_dir <- "./UCI HAR Dataset"
test_dir <- "./test"
train_dir <- "./train"
# 1.2 Load files in root folder
setwd(UCI_dir)
features <- read.table("features.txt")
activity_labels <- read.table("activity_labels.txt")
names(activity_labels) <- c("activity_number", "activity_name")
# 1.3 Load files in test folder
setwd(test_dir)
X_test <- fread("X_test.txt")
Y_test <- fread("Y_test.txt")
subject_test <- fread("subject_test.txt")
names(Y_test) <- "activity_number"
names(subject_test) <- "subject_number"
# 1.4 Combine test files
data_test <- cbind(subject_test, Y_test, X_test)
# 1.5 Add a "test" label and remove other variables
data_test <- cbind(data_test[, 1:2], type = "test", data_test[, 3:ncol(data_test)])
rm(X_test, Y_test, subject_test)
# 1.6 Load files in train folder
setwd("..")
setwd(train_dir)
X_train <- fread("X_train.txt")
Y_train <- fread("Y_train.txt")
subject_train <- fread("subject_train.txt")
names(Y_train) <- "activity_number"
names(subject_train) <- "subject_number"
# 1.7 Combine train files
data_train <- cbind(subject_train, Y_train, X_train)  # Add id for rows and bind subject number and Y_train
# 1.8 Add a "train" label and remove other variables
data_train <- cbind(data_train[, 1:2], type = "train", data_train[, 3:ncol(data_train)] )
rm(X_train, Y_train, subject_train)
# 1.9 Merge files
data_full <- rbind(data_test, data_train)
rm(data_test, data_train)
# 2. Extract only the measurements on the mean and standard deviation for each measurement
mean_cols <- grep("*mean*", features[,2]) + 3  # Find all column names that contain the word "mean"
std_cols <- grep("*std*", features[,2]) + 3  # Find all column names that contain the word "std"
rel_cols <- sort(c(mean_cols, std_cols))  # Merge and sort the vectors (to preserve column order)
data_relevant <- select(data_full,c(1:3, rel_cols))
rm(data_full, mean_cols, std_cols)
# 3. Use descriptive activity names to name the activities in the data set
data_activity <- merge(data_relevant, activity_labels) %>% # Merge with activity_labels to replace numbers with text
select(-activity_number) # Remove activity_number as no longer needed
data_activity <- select(data_activity, c(1:2, activity_name, 3:ncol(data_activity)-1)) # Bring activity name to 4th column for readability
rm(activity_labels)
# 4. Appropriately label the data set with descriptive variable names
names_relevant <- names(data_relevant[,1:3]) # Keep names of first 3 columns
names_relevant <- c(names_relevant, as.character(features[rel_cols-2, 2])) # Append names of relevant columns from features list
names(data_activity) <- names_relevant
rm(list=ls())
# Set working directory
setwd("/Users/Gwen/Dropbox/Data Science/3. Getting and Cleaning Data/Week 4")
# Load relevant packages
if(!require(dplyr)) install.packages("dplyr")
library(dplyr)
if(!require(tidyr)) install.packages("tidyr")
library(tidyr)
if(!require(data.table)) install.packages("data.table")
library(data.table)
# 1. Merge the training and the test sets to create one data set
# 1.1 Set training and test directory
UCI_dir <- "./UCI HAR Dataset"
test_dir <- "./test"
train_dir <- "./train"
# 1.2 Load files in root folder
setwd(UCI_dir)
features <- read.table("features.txt")
activity_labels <- read.table("activity_labels.txt")
names(activity_labels) <- c("activity_number", "activity_name")
# 1.3 Load files in test folder
setwd(test_dir)
X_test <- fread("X_test.txt")
Y_test <- fread("Y_test.txt")
subject_test <- fread("subject_test.txt")
names(Y_test) <- "activity_number"
names(subject_test) <- "subject_number"
# 1.4 Combine test files
data_test <- cbind(subject_test, Y_test, X_test)
# 1.5 Add a "test" label and remove other variables
data_test <- cbind(data_test[, 1:2], type = "test", data_test[, 3:ncol(data_test)])
rm(X_test, Y_test, subject_test)
# 1.6 Load files in train folder
setwd("..")
setwd(train_dir)
X_train <- fread("X_train.txt")
Y_train <- fread("Y_train.txt")
subject_train <- fread("subject_train.txt")
names(Y_train) <- "activity_number"
names(subject_train) <- "subject_number"
# 1.7 Combine train files
data_train <- cbind(subject_train, Y_train, X_train)  # Add id for rows and bind subject number and Y_train
# 1.8 Add a "train" label and remove other variables
data_train <- cbind(data_train[, 1:2], type = "train", data_train[, 3:ncol(data_train)] )
rm(X_train, Y_train, subject_train)
# 1.9 Merge files
data_full <- rbind(data_test, data_train)
rm(data_test, data_train)
# 2. Extract only the measurements on the mean and standard deviation for each measurement
mean_cols <- grep("*mean*", features[,2]) + 3  # Find all column names that contain the word "mean"
std_cols <- grep("*std*", features[,2]) + 3  # Find all column names that contain the word "std"
rel_cols <- sort(c(mean_cols, std_cols))  # Merge and sort the vectors (to preserve column order)
data_relevant <- select(data_full,c(1:3, rel_cols))
rm(data_full, mean_cols, std_cols)
View(activity_labels)
data_activity <- merge(data_relevant, activity_labels)
%>% # Merge with activity_labels to replace numbers with text
select(-activity_number)
data_activity <- merge(data_relevant, activity_labels) %>% # Merge with activity_labels to replace numbers with text
select(-activity_number)
data_activity <- select(data_activity, c(1:2, activity_name, 3:ncol(data_activity)-1)) # Bring activity name to 4th column for readability
rm(activity_labels)
names_relevant <- names(data_activity[,1:3]) # Keep names of first 3 columns
names_activity <- names(data_activity[,1:3]) # Keep names of first 3 columns
names_activity <- c(names_activity, as.character(features[rel_cols-2, 2])) # Append names of relevant columns from features list
names(data_activity) <- names_activity
averages <- xtabs(~data_activity$subject_number+data_activity$activity_name)
averages
averages <- xtabs(mean ~ subject_number + activity_name, data = data_activity())
averages <- xtabs(mean ~ subject_number + activity_name, data = data_activity)
averages <- xtabs(mean() ~ subject_number + activity_name, data = data_activity)
averages <- aggregate(data_activity[, 3:82], list(data_activity$subject_number), mean)
View(averages)
^dplyr
?dplyr
gruops <- group_by(data_activity, subject_number, activity_name)
groups <- group_by(data_activity, subject_number, activity_name)
View(groups)
rm(list=ls())
# Set working directory
setwd("/Users/Gwen/Dropbox/Data Science/3. Getting and Cleaning Data/Week 4")
# Load relevant packages
if(!require(dplyr)) install.packages("dplyr")
library(dplyr)
if(!require(tidyr)) install.packages("tidyr")
library(tidyr)
if(!require(data.table)) install.packages("data.table")
library(data.table)
# 1. Merge the training and the test sets to create one data set
# 1.1 Set training and test directory
UCI_dir <- "./UCI HAR Dataset"
test_dir <- "./test"
train_dir <- "./train"
# 1.2 Load files in root folder
setwd(UCI_dir)
features <- read.table("features.txt")
activity_labels <- read.table("activity_labels.txt")
names(activity_labels) <- c("activity_number", "activity_name")
# 1.3 Load files in test folder
setwd(test_dir)
X_test <- fread("X_test.txt")
Y_test <- fread("Y_test.txt")
subject_test <- fread("subject_test.txt")
names(Y_test) <- "activity_number"
names(subject_test) <- "subject_number"
# 1.4 Combine test files
data_test <- cbind(subject_test, Y_test, X_test)
# 1.5 Add a "test" label and remove other variables
data_test <- cbind(data_test[, 1:2], type = "test", data_test[, 3:ncol(data_test)])
rm(X_test, Y_test, subject_test)
# 1.6 Load files in train folder
setwd("..")
setwd(train_dir)
X_train <- fread("X_train.txt")
Y_train <- fread("Y_train.txt")
subject_train <- fread("subject_train.txt")
names(Y_train) <- "activity_number"
names(subject_train) <- "subject_number"
# 1.7 Combine train files
data_train <- cbind(subject_train, Y_train, X_train)  # Add id for rows and bind subject number and Y_train
# 1.8 Add a "train" label and remove other variables
data_train <- cbind(data_train[, 1:2], type = "train", data_train[, 3:ncol(data_train)] )
rm(X_train, Y_train, subject_train)
# 1.9 Merge files
data_full <- rbind(data_test, data_train)
rm(data_test, data_train)
# 2. Extract only the measurements on the mean and standard deviation for each measurement
mean_cols <- grep("*mean*", features[,2]) + 3  # Find all column names that contain the word "mean"
std_cols <- grep("*std*", features[,2]) + 3  # Find all column names that contain the word "std"
rel_cols <- sort(c(mean_cols, std_cols))  # Merge and sort the vectors (to preserve column order)
data_relevant <- select(data_full,c(1:3, rel_cols))
rm(data_full, mean_cols, std_cols)
# 3. Use descriptive activity names to name the activities in the data set
data_activity <- merge(data_relevant, activity_labels) %>% # Merge with activity_labels to replace numbers with text
select(-activity_number) # Remove activity_number as no longer needed
data_activity <- select(data_activity, c(1:2, activity_name, 3:ncol(data_activity)-1)) # Bring activity name to 4th column for readability
rm(activity_labels, data_relevant)
# 4. Appropriately label the data set with descriptive variable names
names_activity <- names(data_activity[,1:3]) # Keep names of first 3 columns
names_activity <- c(names_activity, as.character(features[rel_cols-2, 2])) # Append names of relevant columns from features list
names(data_activity) <- names_activity
# 5. From the data set in step 4, create a second, independent tidy data set
# with the average of each variable for each activity and each subject.
# averages <- xtabs(mean() ~ subject_number + activity_name, data = data_activity)
# averages <- aggregate(data_activity[, 3:82], list(data_activity$subject_number), mean)
groups <- group_by(data_activity, subject_number, activity_name)
groups <- group_by(data_activity, subject_number, activity_name, mean)
groups <- summarise(data_activity, mean(names(data_activity)[4:82])
)
names(data_activity)
names(data_activity)[4:82]
mean(c(names(data_activity)[4:82]))
c(names(data_activity)[4:82])
groups <- group_by(data_activity, subject_number)
rm(list=ls())
# Set working directory
setwd("/Users/Gwen/Dropbox/Data Science/3. Getting and Cleaning Data/Week 4")
# Load relevant packages
if(!require(dplyr)) install.packages("dplyr")
library(dplyr)
if(!require(tidyr)) install.packages("tidyr")
library(tidyr)
if(!require(data.table)) install.packages("data.table")
library(data.table)
# 1. Merge the training and the test sets to create one data set
# 1.1 Set training and test directory
UCI_dir <- "./UCI HAR Dataset"
test_dir <- "./test"
train_dir <- "./train"
# 1.2 Load files in root folder
setwd(UCI_dir)
features <- read.table("features.txt")
activity_labels <- read.table("activity_labels.txt")
names(activity_labels) <- c("activity_number", "activity_name")
# 1.3 Load files in test folder
setwd(test_dir)
X_test <- fread("X_test.txt")
Y_test <- fread("Y_test.txt")
subject_test <- fread("subject_test.txt")
names(Y_test) <- "activity_number"
names(subject_test) <- "subject_number"
# 1.4 Combine test files
data_test <- cbind(subject_test, Y_test, X_test)
# 1.5 Add a "test" label and remove other variables
data_test <- cbind(data_test[, 1:2], type = "test", data_test[, 3:ncol(data_test)])
rm(X_test, Y_test, subject_test)
# 1.6 Load files in train folder
setwd("..")
setwd(train_dir)
X_train <- fread("X_train.txt")
Y_train <- fread("Y_train.txt")
subject_train <- fread("subject_train.txt")
names(Y_train) <- "activity_number"
names(subject_train) <- "subject_number"
# 1.7 Combine train files
data_train <- cbind(subject_train, Y_train, X_train)  # Add id for rows and bind subject number and Y_train
# 1.8 Add a "train" label and remove other variables
data_train <- cbind(data_train[, 1:2], type = "train", data_train[, 3:ncol(data_train)] )
rm(X_train, Y_train, subject_train)
# 1.9 Merge files
data_full <- rbind(data_test, data_train)
rm(data_test, data_train)
# 2. Extract only the measurements on the mean and standard deviation for each measurement
mean_cols <- grep("*mean*", features[,2]) + 3  # Find all column names that contain the word "mean"
std_cols <- grep("*std*", features[,2]) + 3  # Find all column names that contain the word "std"
rel_cols <- sort(c(mean_cols, std_cols))  # Merge and sort the vectors (to preserve column order)
data_relevant <- select(data_full,c(1:3, rel_cols))
rm(data_full, mean_cols, std_cols)
# 3. Use descriptive activity names to name the activities in the data set
data_activity <- merge(data_relevant, activity_labels) %>% # Merge with activity_labels to replace numbers with text
select(-activity_number) # Remove activity_number as no longer needed
data_activity <- select(data_activity, c(1:2, activity_name, 3:ncol(data_activity)-1)) # Bring activity name to 4th column for readability
rm(activity_labels, data_relevant)
# 4. Appropriately label the data set with descriptive variable names
names_activity <- names(data_activity[,1:3]) # Keep names of first 3 columns
names_activity <- c(names_activity, as.character(features[rel_cols-2, 2])) # Append names of relevant columns from features list
names(data_activity) <- names_activity
# 5. From the data set in step 4, create a second, independent tidy data set
# with the average of each variable for each activity and each subject.
# averages <- xtabs(mean() ~ subject_number + activity_name, data = data_activity)
# averages <- aggregate(data_activity[, 3:82], list(data_activity$subject_number), mean)
groups <- group_by(data_activity, subject_number)
class(data_activity)
dt <- data.frame(age=rchisq(20,10), group=sample(1:2,20, rep=T))
grp <- group_by(dt, group)
View(dt)
View(grp)
